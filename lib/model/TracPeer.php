<?php

require 'lib/model/om/BaseTracPeer.php';


/**
 * Skeleton subclass for performing query and update operations on the 'trac' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * 01/13/11 10:45:05
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class TracPeer extends BaseTracPeer {

    const TYPE_BUG = 'B'; //Bug
    const TYPE_IMPROVEMENT = 'I'; //Solicitud de millora
    const TYPE_UPGRADE = 'U'; //Nova versió a execució

    static public function getCriteriaActiu( $C )
    {
      $C->add(self::ACTIU,true);      
      return $C;
    }    
    
    static public function initialize( $idS , $idU , $type = self::TYPE_UPGRADE , $idT = 0 )
    {
        $OO = self::retrieveByPK($idT);            
        if(!($OO instanceof Trac)):                                    		
        	$OO = new Trac();       
            $OO->setTitle('');
            $OO->setDescription('');
            $OO->setType($type);
            $OO->setSiteId($idS);
            $OO->setUsuariid($idU);
            $OO->setDate(time());                                           
            $OO->setActiu(true);     		            			    			    			        			
        endif;
               
                
        
       	if($type == self::TYPE_UPGRADE):
             return new TracUpgradeForm($OO, array('IDS'=>$idS, 'IDU'=>$idU)); 
        else:
             return new TracBugForm($OO,array('IDS'=>$idS,'IDU'=>$idU));
        endif; 
    }    

    static public function getBugsList($P = 1)
    {
        $C = new Criteria();
        $C = self::getCriteriaActiu($C);
        
        $C->add(self::TYPE, self::TYPE_BUG);
        $C->addDescendingOrderByColumn(self::IDTRAC);
        
        $pager = new sfPropelPager('Trac', 10);
        $pager->setCriteria($C);
        $pager->setPage($P);
        $pager->init();        
        return $pager;                                
    }
    
    static public function getImprovementsList($P = 1)
    {
        $C = new Criteria();
        $C = self::getCriteriaActiu($C);
        
        $C->add(self::TYPE, self::TYPE_IMPROVEMENT);
        $C->addDescendingOrderByColumn(self::IDTRAC);
        
        $pager = new sfPropelPager('Trac', 10);
        $pager->setCriteria($C);
        $pager->setPage($P);
        $pager->init();        
        return $pager;        
    }
    
    static public function getUpgradesList($P)
    {
        $C = new Criteria();
        $C = self::getCriteriaActiu($C);
        
        $C->add(self::TYPE, self::TYPE_UPGRADE);
        $C->addDescendingOrderByColumn(self::IDTRAC);
        
        $pager = new sfPropelPager('Trac', 10);
        $pager->setCriteria($C);
        $pager->setPage($P);
        $pager->init();        
        return $pager;
    }

} // TracPeer
