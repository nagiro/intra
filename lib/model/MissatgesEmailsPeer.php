<?php

require 'lib/model/om/BaseMissatgesEmailsPeer.php';


/**
 * Skeleton subclass for performing query and update operations on the 'missatges_emails' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * 09/29/10 12:44:43
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class MissatgesEmailsPeer extends BaseMissatgesEmailsPeer {

    static public function getEmailsText($IDL = 0)
    {
        $RET = "";
        $C = new Criteria();
        $C->add(self::IDLLISTA , $IDL);
        $C->addDescendingOrderByColumn(self::EMAIL);
        foreach(self::doSelect($C) as $Email):
            $RET .= $Email->getEmail()."\n";
        endforeach;
                
        return $RET;        
    }

    static public function update( $IDL , $EMAILS )
    {
        $RESULTATS['Afegits'] = 0;
        $RESULTATS['Esborrats'] = 0;
        $RESULTATS['Erronis'] = 0;
        $RESULTATS['Existents'] = 0;
        
        $EMAILS_NEW = array();        
        $EMAILS_OLD = nl2br($EMAILS);        
        $EMAILS_OLD = explode('<br />',$EMAILS_OLD);
        
        //Treiem els espais en blanc i sals buits. 
        foreach($EMAILS_OLD as $K=>$E):
            if(strlen($E) > 3):
                $EMAILS_NEW[trim($E)] = trim($E);
                $RESULTATS['Existents']++;
            endif;
        endforeach; 
   
        //Mirem els que hem d'afegir                               
        foreach($EMAILS_NEW as $E):            
            $OE = self::retrieveByPK($IDL,$E);
            if(!($OE instanceof MissatgesEmails)):
                if(!self::checkEmail($E)):
                    $RESULTATS['Erronis']++;
                    $RESULTATS['Existents']--;
                else:
                    $OE = new MissatgesEmails();
                    $OE->setIdllista($IDL);
                    $OE->setEmail($E);
                    $OE->save();
                    $RESULTATS['Afegits']++; 
                    $RESULTATS['Existents']--;               
                endif; 
            endif;             
        endforeach;
        
        //Mirem els que hem d'esborrar
        $C = new Criteria();
        $C->add(self::IDLLISTA, $IDL);                        
        foreach(self::doSelect($C) as $OE):            
            if(!in_array($OE->getEmail(),$EMAILS_NEW)):                            
                $OE->delete();
                $RESULTATS['Esborrats']++;   
                $RESULTATS['Existents']--;             
            endif;             
        endforeach;
        
        return $RESULTATS;
                
    }

    static private function checkEmail($email) {
      if(preg_match("/^([a-zA-Z0-9])+([a-zA-Z0-9\._-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\._-]+)+$/",$email)){
        list($username,$domain)=explode('@',$email);
        if(!checkdnsrr($domain,'MX')) { return false; }
        return true;
      }
      return false;
    }

} // MissatgesEmailsPeer
