<?php

require 'lib/model/om/BaseGestioMenusPeer.php';


/**
 * Skeleton subclass for performing query and update operations on the 'gestio_menus' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * 10/13/10 13:08:20
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class GestioMenusPeer extends BaseGestioMenusPeer {

    const MENUS_ADMIN = 1;
    const MENUS_USER  = 2;

    static public function getMenusUsuariArray($idU,$idS)
    {
        $RET = array();
        $LOM = self::getMenusUsuari($idU,$idS,true);                                        
        foreach($LOM as $OM):
            $RET[$OM->getMenuId()] = $OM->getMenuId();
        endforeach;
        return $RET;
    }

    static public function getMenusSiteUsersArray($idS,$admin)
    {
        //Busco els menús del primer usuari i el passo com a mostra.
        $OUS = UsuarisSitesPeer::getFirstSiteUser($idS);
        return self::getMenusUsuari($OUS->getUsuariId(),$idS,$admin);                          
    }

    static public function getMenusUsuari($idU,$idS,$admin = 1)
    {
        $C = new Criteria();        
        
        if($admin == 1):
            //Només mostrem els que toquen per l'usuari. '
            $C = UsuarisMenusPeer::getCriteriaActiu($C);
            $C->addJoin(UsuarisMenusPeer::MENU_ID,self::MENU_ID);
            $C->add(UsuarisMenusPeer::USUARI_ID, $idU);
            $C->add(UsuarisMenusPeer::SITE_ID, $idS);                                    
            $C->add(self::ACTIU, 1);
            $C->add(self::TIPUS, self::MENUS_ADMIN);
        else:                        
            //Els mostrem tots
            $C->add(self::TIPUS, self::MENUS_USER);
            $C->add(self::ACTIU, 1);        
        endif;                
        
        $C->addAscendingOrderByColumn(self::ORDRE);
        $LOM = self::doSelect($C);
        return $LOM;                
    }

    static public function getSelect()
    {
        $RET = array();
        $C = new Criteria();        
        foreach(self::doSelect($C) as $OM):
            if($OM->getTipus() == GestioMenusPeer::MENUS_ADMIN):
                $RET[$OM->getMenuId()] = '(A) '.$OM->getTitol();
            else:
                $RET[$OM->getMenuId()] = '(R) '.$OM->getTitol();
            endif;
        endforeach;
        return $RET;
    }
    
} // GestioMenusPeer
